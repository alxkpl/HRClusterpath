[{"path":"https://alxkpl.github.io/HRClusterpath/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexandre CAPEL. Author, maintainer.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"CAPEL (2025). HRClusterpath: Clusterpath Hüsler-Reiss. R package version 0.1.0, https://alxkpl.github.io/HRClusterpath/.","code":"@Manual{,   title = {HRClusterpath: Clusterpath for Hüsler-Reiss},   author = {Alexandre CAPEL},   year = {2025},   note = {R package version 0.1.0},   url = {https://alxkpl.github.io/HRClusterpath/}, }"},{"path":"https://alxkpl.github.io/HRClusterpath/index.html","id":"hrclusterpath","dir":"","previous_headings":"","what":"Clusterpath for Hüsler-Reiss","title":"Clusterpath for Hüsler-Reiss","text":"HRClusterpath R-package provides tools variable clustering Husler-Reiss models, specially using graphical models structure.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clusterpath for Hüsler-Reiss","text":"install package, one can write R-terminal :","code":"remotes::install_github(\"alxkpl/HRClusterpath\")"},{"path":"https://alxkpl.github.io/HRClusterpath/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Clusterpath for Hüsler-Reiss","text":"section gives overview package’s tools.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/index.html","id":"clusterpath-algorithm-for-hierarchical-clustering","dir":"","previous_headings":"Usage","what":"Clusterpath algorithm for hierarchical clustering","title":"Clusterpath for Hüsler-Reiss","text":"first method can use package hierarchical clustering (variables) using Clusterpath algorithm applied likelihood precision matrix Husler Reiss graphical model fused-Lasso penalty. can use : get_cluster get optimal cluster fixed parameter \\(\\lambda\\) estimated variogram \\(\\hat \\Gamma\\) customizable weights. HR_Clusterpath build list optimal results grid \\(\\lambda\\) standards exponnential weights. gg_cluster provides dendrogram induced results HR_Clusterpath function. others functions analyze results.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/ChiToGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"ChiToGamma — ChiToGamma","title":"ChiToGamma — ChiToGamma","text":"Transform \\(\\chi\\) matrix corresponding variogram \\(\\Gamma\\)","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/ChiToGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChiToGamma — ChiToGamma","text":"","code":"ChiToGamma(Chi_matrix)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/ChiToGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChiToGamma — ChiToGamma","text":"Chi_matrix matrix \\(\\chi_{ij}\\) entries.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/ChiToGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChiToGamma — ChiToGamma","text":"Gives variogram \\(\\Gamma\\) according \\(\\chi\\) matrix Hüsler-Reiss MGDP. case, exists closed equation link variogram extremal coefficients, given : $$    \\chi_{ij} = 2 - 2 \\phi(\\sqrt{\\Gamma_{ij}/2}) $$ \\(\\phi\\) standard normal distribution function.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/ChiToGamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChiToGamma — ChiToGamma","text":"","code":"ChiToGamma(matrix(c(1, 0.7,                     0.7, 1),            nrow = 2)) #>           [,1]      [,2] #> [1,] 0.0000000 0.5938874 #> [2,] 0.5938874 0.0000000"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/D_tilde2_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster distance squared function — D_tilde2_r","title":"Cluster distance squared function — D_tilde2_r","text":"Cluster distance squared function","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/D_tilde2_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster distance squared function — D_tilde2_r","text":"","code":"D_tilde2_r(R, clusters)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/D_tilde2_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster distance squared function — D_tilde2_r","text":"R K x K symmetric matrix. clusters list vector : vector gives element cluster.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/D_tilde2_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster distance squared function — D_tilde2_r","text":"function cluster number : compute square distance two clusters distance defined section 4.2 cluster document.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/D_tilde2_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster distance squared function — D_tilde2_r","text":"","code":"R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1,3), c(2,4)) D2 <- D_tilde2_r(R, clusters) #> Error in D_tilde2_r(R, clusters): could not find function \"D_tilde2_r\" D2(1, 2) #> Error in D2(1, 2): could not find function \"D2\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/U_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the matrix of clusters — U_matrix","title":"Computation of the matrix of clusters — U_matrix","text":"Computation matrix clusters","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/U_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the matrix of clusters — U_matrix","text":"","code":"U_matrix(clusters)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/U_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the matrix of clusters — U_matrix","text":"clusters list vector : vector gives element cluster.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/U_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the matrix of clusters — U_matrix","text":"d x K matrix U u_jk = 1 variable j belongs cluster C_k 0 otherwise.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/U_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of the matrix of clusters — U_matrix","text":"","code":"clusters <- list(c(1,2,3),c(4,5)) U_matrix(clusters) #> Error in U_matrix(clusters): could not find function \"U_matrix\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compare_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two clusters. — compare_clusters","title":"Compare two clusters. — compare_clusters","text":"Compare two clusters.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compare_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two clusters. — compare_clusters","text":"","code":"compare_clusters(clusters1, clusters2)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compare_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two clusters. — compare_clusters","text":"clusters1 first cluster compare. clusters2 second cluster compare.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compare_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two clusters. — compare_clusters","text":"Return FALSE clusters number cluster. Otherwise,","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compute_W.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the first weight matrix — compute_W","title":"Computation of the first weight matrix — compute_W","text":"Computation first weight matrix","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compute_W.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the first weight matrix — compute_W","text":"","code":"compute_W(data)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compute_W.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the first weight matrix — compute_W","text":"data data","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/compute_W.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the first weight matrix — compute_W","text":"initial wieght matrix without fused variables.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/crout_factorisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Crout factorization algorithm. — crout_factorisation","title":"Crout factorization algorithm. — crout_factorisation","text":"Crout factorization algorithm.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/crout_factorisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crout factorization algorithm. — crout_factorisation","text":"","code":"crout_factorisation(A, tol = 1e-12)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/crout_factorisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crout factorization algorithm. — crout_factorisation","text":"d x d symmetric positive matrix. tol positive value : tolerance zero diagonal","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/crout_factorisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crout factorization algorithm. — crout_factorisation","text":"LU Crout decomposition matrix . symmetric positive matrix, exists LU decomposition : = L' L","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/crout_factorisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crout factorization algorithm. — crout_factorisation","text":"","code":"A <- matrix(c(1,2,3,              2,5,6,              3,6,9), nc = 3) L <- crout_factorisation(A) #> Error in crout_factorisation(A): could not find function \"crout_factorisation\" L %*% t(L) #> Error: object 'L' not found"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/detect_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the merge and give all information about cluster and lambda. — detect_merge","title":"Detect the merge and give all information about cluster and lambda. — detect_merge","text":"Detect merge give information cluster lambda.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/detect_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the merge and give all information about cluster and lambda. — detect_merge","text":"","code":"detect_merge(solution_list)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/detect_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the merge and give all information about cluster and lambda. — detect_merge","text":"solution_list Solution's list best_clusters.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/detect_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the merge and give all information about cluster and lambda. — detect_merge","text":"Return list solution change occurs list clusters.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gamma_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Variogram transformation application gamma — gamma_function","title":"Variogram transformation application gamma — gamma_function","text":"Variogram transformation application gamma","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gamma_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variogram transformation application gamma — gamma_function","text":"","code":"gamma_function(sigma)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gamma_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variogram transformation application gamma — gamma_function","text":"sigma d x d numeric matrix.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gamma_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variogram transformation application gamma — gamma_function","text":"symmetric positive matrix sigma (covariance matrix), return corresponding variogram matrix. Can used interpretation.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gamma_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variogram transformation application gamma — gamma_function","text":"","code":"s_sigma <- matrix(rnorm(16, 2), nc = 4) gamma_function(s_sigma %*% t(s_sigma)) #> Error in gamma_function(s_sigma %*% t(s_sigma)): could not find function \"gamma_function\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gen_det.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalised determinant — gen_det","title":"Generalised determinant — gen_det","text":"Generalised determinant","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gen_det.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalised determinant — gen_det","text":"","code":"gen_det(A, tol = 1e-10)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gen_det.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalised determinant — gen_det","text":"d x d real valued matrix. tol positive value.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gen_det.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalised determinant — gen_det","text":"Compute generalised determinant matrix . recall generalised determinant extension determinant singular matrix. corresponds product non zero eigen values.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gen_det.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalised determinant — gen_det","text":"","code":"A <- matrix(c(1,2,3,               2,5,6,               3,6,9), nc = 3) gen_det(A) #> Error in gen_det(A): could not find function \"gen_det\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/get_adjacency_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Give the adjacency matrix coresponding to the right hierarchical according to the fusion during optimization. — get_adjacency_matrix","title":"Give the adjacency matrix coresponding to the right hierarchical according to the fusion during optimization. — get_adjacency_matrix","text":"Give adjacency matrix coresponding right hierarchical according fusion optimization.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/get_adjacency_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give the adjacency matrix coresponding to the right hierarchical according to the fusion during optimization. — get_adjacency_matrix","text":"","code":"get_adjacency_matrix(event_list, lambda_max)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/get_adjacency_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give the adjacency matrix coresponding to the right hierarchical according to the fusion during optimization. — get_adjacency_matrix","text":"event_list list solution detect_fusion. lambda_max lambda end optimization.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/get_adjacency_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give the adjacency matrix coresponding to the right hierarchical according to the fusion during optimization. — get_adjacency_matrix","text":"matrix use construction dendrogram.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gradient_D2.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient matrix of distance between two columns — gradient_D2","title":"Gradient matrix of distance between two columns — gradient_D2","text":"Gradient matrix distance two columns","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gradient_D2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient matrix of distance between two columns — gradient_D2","text":"","code":"gradient_D2(R, clusters)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gradient_D2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient matrix of distance between two columns — gradient_D2","text":"R K x K symmetric matrix. clusters list vector : vector gives element cluster.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gradient_D2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient matrix of distance between two columns — gradient_D2","text":"Return functon indices (k', l') computing gradient matrix tilde D^2(r_k', r_l'). See section 4.3.3 cluster document details.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/gradient_D2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gradient matrix of distance between two columns — gradient_D2","text":"","code":"R <- matrix(c(-1,0,-2,               0,-3,-1,               -2,-1,-1), 3) clusters <- list(c(1,3), c(2), 4) grad <- gradient_D2(R, clusters) #> Error in gradient_D2(R, clusters): could not find function \"gradient_D2\" grad(1, 2) #> Error in grad(1, 2): could not find function \"grad\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Clusterpath as hierarchical clustering — hierarchy-graph","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"ggplot2 ggraph function plotting results clusterpath algorithm.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"","code":"gg_cluster(list_results)  average_hierarchy(replicates)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"list_results list results optimization HR_Clusterpath(). replicates list results optimization replicates HR_Clusterpath().","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"gg_cluster(), dendrogram obtained optimization results HR_Clusterpath() lambda. average_hierarchy(), average dendrogram obtained several optimization results HR_Clusterpath() lambda.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"development \\([1]\\), clusterpath algorithm built convex relaxation hierarchical clustering allows us produce kind graphs results algorithm enough thin large grid penalty \\(\\lambda\\).","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"\\([1]\\) Hocking, T. D., Joulin, ., Bach, F., Vert, J.-P. (2011). Clusterpath: Algorithm Clustering using Convex Fusion Penalties. Proceedings 28th International Conference Machine Learning, Bellevue, Washington, USA,. Omnipress.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hierarchy-graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clusterpath as hierarchical clustering — hierarchy-graph","text":"","code":"# Construction of clusters and R matrix R <- matrix(c(1, -3, 0,               -3, 2, -2,               0, -2, 1), nc = 3) clusters <- list(1:5, 6:10, 11:15)  # Construction of induced theta and corresponding variogram gamma Theta <- build_theta(R, clusters) Gamma <- graphicalExtremes::Theta2Gamma(Theta)  gr3_bal_sim_param_cluster <-   list(     R = R,     clusters = clusters,     Theta = Theta,     Gamma = Gamma,     chi = 1,     n = 1e3,     d = 15   )  set.seed(804) data <- graphicalExtremes::rmpareto(n = gr3_bal_sim_param_cluster$n,                                     model = \"HR\",                                     par = gr3_bal_sim_param_cluster$Gamma)  lambda <- seq(0, 3, 1e-3)  res <- HR_Clusterpath(data = data,                       zeta = gr3_bal_sim_param_cluster$chi,                       lambda = lambda,                       eps_f = 1e-1) #> Error in (function (.x, .f, ..., .progress = FALSE) {    map_(\"list\", .x, .f, ..., .progress = .progress)})(.x = c(0, 0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01, 0.011, 0.012, 0.013, 0.014, 0.015, 0.016, 0.017, 0.018, 0.019, 0.02, 0.021, 0.022, 0.023, 0.024, 0.025, 0.026, 0.027, 0.028, 0.029, 0.03, 0.031, 0.032, 0.033, 0.034, 0.035, 0.036, 0.037, 0.038, 0.039, 0.04, 0.041, 0.042, 0.043, 0.044, 0.045, 0.046, 0.047, 0.048, 0.049, 0.05, 0.051, 0.052, 0.053, 0.054, 0.055, 0.056, 0.057, 0.058, 0.059, 0.06, 0.061, 0.062, 0.063, 0.064, 0.065, 0.066, 0.067, 0.068, 0.069, 0.07, 0.071, 0.072, 0.073, 0.074, 0.075, 0.076, 0.077, 0.078, 0.079, 0.08, 0.081, 0.082, 0.083, 0.084, 0.085, 0.086, 0.087, 0.088, 0.089, 0.09, 0.091, 0.092, 0.093, 0.094, 0.095, 0.096, 0.097, 0.098, 0.099, 0.1, 0.101, 0.102, 0.103, 0.104, 0.105, 0.106, 0.107, 0.108, 0.109, 0.11, 0.111, 0.112, 0.113, 0.114, 0.115, 0.116, 0.117, 0.118, 0.119, 0.12, 0.121, 0.122, 0.123, 0.124, 0.125, 0.126, 0.127, 0.128, 0.129, 0.13, 0.131, 0.132, 0.133, 0.134, 0.135, 0.136, 0.137, 0.138, 0.139, 0.14, 0.141, 0.142, 0.143, 0.144, 0.145, 0.146, 0.147, 0.148, 0.149, 0.15, 0.151, 0.152, 0.153, 0.154, 0.155, 0.156, 0.157, 0.158, 0.159, 0.16, 0.161, 0.162, 0.163, 0.164, 0.165, 0.166, 0.167, 0.168, 0.169, 0.17, 0.171, 0.172, 0.173, 0.174, 0.175, 0.176, 0.177, 0.178, 0.179, 0.18, 0.181, 0.182, 0.183, 0.184, 0.185, 0.186, 0.187, 0.188, 0.189, 0.19, 0.191, 0.192, 0.193, 0.194, 0.195, 0.196, 0.197, 0.198, 0.199, 0.2, 0.201, 0.202, 0.203, 0.204, 0.205, 0.206, 0.207, 0.208, 0.209, 0.21, 0.211, 0.212, 0.213, 0.214, 0.215, 0.216, 0.217, 0.218, 0.219, 0.22, 0.221, 0.222, 0.223, 0.224, 0.225, 0.226, 0.227, 0.228, 0.229, 0.23, 0.231, 0.232, 0.233, 0.234, 0.235, 0.236, 0.237, 0.238, 0.239, 0.24, 0.241, 0.242, 0.243, 0.244, 0.245, 0.246, 0.247, 0.248, 0.249, 0.25, 0.251, 0.252, 0.253, 0.254, 0.255, 0.256, 0.257, 0.258, 0.259, 0.26, 0.261, 0.262, 0.263, 0.264, 0.265, 0.266, 0.267, 0.268, 0.269, 0.27, 0.271, 0.272, 0.273, 0.274, 0.275, 0.276, 0.277, 0.278, 0.279, 0.28, 0.281, 0.282, 0.283, 0.284, 0.285, 0.286, 0.287, 0.288, 0.289, 0.29, 0.291, 0.292, 0.293, 0.294, 0.295, 0.296, 0.297, 0.298, 0.299, 0.3, 0.301, 0.302, 0.303, 0.304, 0.305, 0.306, 0.307, 0.308, 0.309, 0.31, 0.311, 0.312, 0.313, 0.314, 0.315, 0.316, 0.317, 0.318, 0.319, 0.32, 0.321, 0.322, 0.323, 0.324, 0.325, 0.326, 0.327, 0.328, 0.329, 0.33, 0.331, 0.332, 0.333, 0.334, 0.335, 0.336, 0.337, 0.338, 0.339, 0.34, 0.341, 0.342, 0.343, 0.344, 0.345, 0.346, 0.347, 0.348, 0.349, 0.35, 0.351, 0.352, 0.353, 0.354, 0.355, 0.356, 0.357, 0.358, 0.359, 0.36, 0.361, 0.362, 0.363, 0.364, 0.365, 0.366, 0.367, 0.368, 0.369, 0.37, 0.371, 0.372, 0.373, 0.374, 0.375, 0.376, 0.377, 0.378, 0.379, 0.38, 0.381, 0.382, 0.383, 0.384, 0.385, 0.386, 0.387, 0.388, 0.389, 0.39, 0.391, 0.392, 0.393, 0.394, 0.395, 0.396, 0.397, 0.398, 0.399, 0.4, 0.401, 0.402, 0.403, 0.404, 0.405, 0.406, 0.407, 0.408, 0.409, 0.41, 0.411, 0.412, 0.413, 0.414, 0.415, 0.416, 0.417, 0.418, 0.419, 0.42, 0.421, 0.422, 0.423, 0.424, 0.425, 0.426), .f = function (...) {    {        ...furrr_chunk_seeds_i <- ...furrr_chunk_seeds_env[[\"i\"]]        ...furrr_chunk_seeds_env[[\"i\"]] <- ...furrr_chunk_seeds_i +             1L        assign(x = \".Random.seed\", value = ...furrr_chunk_seeds[[...furrr_chunk_seeds_i]],             envir = globalenv(), inherits = FALSE)    }    NULL    ...furrr_out <- ...furrr_fn(...)    ...furrr_out}): ℹ In index: 1. #> Caused by error in `build_theta()`: #> ! could not find function \"build_theta\"  gg_cluster(res) #> Error: object 'res' not found"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"Gradient descent based Clusterpath algorithm adapted likelihood graphical Hüsler-Reiss model. Usefull precision matrix \\(\\Theta\\) (variogram \\(\\Gamma\\)) block matrix structure.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"","code":"get_cluster(gamma, weights, eps_f, ...)  HR_Clusterpath(data, zeta, lambda, eps_g = 0.001, eps_f = 0.01, it_max = 1000)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"gamma get_clusters(), \\(d \\times d\\) matrix : variogram matrix \\(\\Gamma\\). weights get_clusters(), \\(d \\times d\\) symmetric weightsmatrix zero diagonal. eps_f positive number : tolerance threshold merging clusters. data HR_Clusterapth(), \\(n \\times d\\) matrix : matrix data. zeta HR_Clusterapth(), positive number : tuned parameter exponential weights. lambda get_clusters(), positive number : weight penalty. HR_Clusterpath(), numerix vector positive number : grid line \\(\\lambda\\). eps_g positive number : tolerance threshold convergence gradient descent. it_max integer : maximal number iteration gradient descent algorithm.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"HR_Clusterpath() gradient descent data default values method optimization : variogram matrix \\(\\Gamma\\) empirical variogram weights set exponential weights, depends one tuning parameter \\(\\zeta\\) theoretical results. get_clusters() freer version previous function. can use estimation variogram \\(\\Gamma\\) customizable weights matrix \\(W\\). produce list results : $R : \\(R\\) matrix clusters. $clusters : list variable indices, clustered. $nllh : value negative penalised negative loglikelihood. $lambda : value lambda. case HR_Clusterpath() list previous list.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"block matrix models defined two elements : cluster's partition \\(\\{C_1, \\dots, C_K\\}\\), included \\(V\\) \\(R\\) matrix belongs \\(\\mathcal S_K(\\mathbb R)\\), set symmetric \\(K \\times K\\) matrix (See also build_theta() extract_R_matrix()). Clusterpath aims find optimum penalised negative loglikelihood defined neg_likelihood_pen().","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"some-results-for-hr-clusterpath-","dir":"Reference","previous_headings":"","what":"Some results for HR_Clusterpath()","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"get replications \\(X_1, \\dots, X_n\\) random vector \\(X\\) belongs attraction domain \\(K\\)-block Hüsler-Reiss graphical model, minimum penalised negative loglikelihood conveges almost surely true precision matrix model \\(\\Theta^*\\), \\(\\lambda\\), provided choose sequence \\((\\zeta_n)_{n\\\\mathbb N^*}\\) grows slower \\(log(n)\\) sequence. general, \\(\\zeta \\[1,2]\\) good choice.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/hr-clusterpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clusterpath algorithm for Hüsler-Reiss models — hr-clusterpath","text":"","code":"W <- matrix(c(0, 1, 1, 1,               1, 0, 1, 1,               1, 1, 0, 1,               1, 1, 1, 0), nc = 4) gamma <- generate_random_Gamma(d = 4) #> Error in generate_random_Gamma(d = 4): could not find function \"generate_random_Gamma\" R <- matrix(c(1,0,0,-1,               0,1,1,-2,               0,1,1,-1,               -1,-2,-1,1), nc = 4) Cluster_HR <- get_cluster(gamma, W, 100) Cluster_HR(R) #> Error in Cluster_HR(R): argument \"lambda\" is missing, with no default"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"penalised negative loglikelihood Hüsler-Reiss graphical models can written follow : $$  L_{\\mathcal P}^{(n)}(\\Theta, \\lambda) = \\underbrace{-\\log(|\\Theta|_+) -  \\frac 12 \\text{tr}(\\hat \\Gamma^{(n)}\\Theta)}_{L^{(n)}(\\Theta)} + \\lambda  \\underbrace{\\sum_{<j} w_{ij} d^2_{ij}(\\Theta)}_{\\mathcal P(\\Theta)} $$ \\(|\\cdot|_+\\) generalised determinant, \\(n\\) sample size, \\(\\hat \\Gamma^{(n)}\\) estimation variogram matrix \\(\\Gamma\\) \\(w_{ij}>0\\) weights.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"","code":"neg_likelihood(gamma)  penalty(weights)  neg_likelihood_pen(gamma, weights)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"gamma \\(d \\times d\\) matrix: variogram matrix \\(\\Gamma\\). weights \\(d \\times d\\) symmetric matrix \\(W\\) zero diagonal.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"neg_likelihood(), produces function two parameters : R \\(K \\times K\\) clusters matrix clusters list indices associated partition \\(V\\) compute value non penalised negative log-likelihood \\(L^{(n)}(\\Theta)\\). penalty(), produces function two parameters : R \\(K \\times K\\) clusters matrix clusters list indices associated partition \\(V\\) compute value penalty \\(\\mathcal P(\\Theta)\\). neg_likelihood_pen(), produces function three parameters : R : \\(K \\times K\\) clusters matrix clusters : list indices associated partition \\(V\\) lambda : positive number, weight penalty. compute value penalised negative log-likelihood \\(L_{\\mathcal P}^{(n)}(\\Theta, \\lambda)\\).","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"use block matrix structure compute likelihood (see build_theta() extract_R_matrix()), use two parameters computation instead one matrix \\(\\Theta\\).","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative log-likelihood for Hüsler-Reiss graphical models — likelihood","text":"","code":"############################################################ #                      INITIALIZATION ############################################################ # Block matrix structure R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1,3), c(2,4))  # Weight matrix W <- matrix(c(0, 1, 1, 1,               1, 0, 1, 1,               1, 1, 0, 1,               1, 1, 1, 0), nc = 4)  # Random variogram gamma <- matrix(c(0, 2, 1, 0,                   2, 0, 4, 1,                   1, 4, 0, 7,                   0, 1, 7, 0), nc = 4)  # Regularization parameter lambda <- 2.5  ############################################################ #                   NEGATIVE LOG-LIKEHOOD ############################################################ nllh <- neg_likelihood(gamma) nllh(R, clusters) #> [1] 10.72741  ############################################################ #                          PENALTY ############################################################ pen <- penalty(W) pen(R, clusters) #> [1] 18  ############################################################ #             PENALISED NEGATIVE LOG-LIKELIHOOD ############################################################ nllh_pen <- neg_likelihood_pen(gamma, W) nllh_pen(R, clusters, lambda) #> [1] 55.72741"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/merge_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Function which merges clusters — merge_clusters","title":"Function which merges clusters — merge_clusters","text":"Function merges clusters","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/merge_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function which merges clusters — merge_clusters","text":"","code":"merge_clusters(R, clusters, eps_f = 0.1, cost)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/merge_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function which merges clusters — merge_clusters","text":"R K x K symmetric matrix. clusters list vector : vector gives element cluster. eps_f positive number : minimal tolerance merging clusters cost function : Cost function optimisation","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/merge_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function which merges clusters — merge_clusters","text":"Returns, merging, list new clusters corresponding R matrix, coefficient new clustered computing averaging coefficient two previous clusters.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/merge_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function which merges clusters — merge_clusters","text":"","code":"R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1,3), c(2,4)) W <- matrix(c(0, 1, 1, 1,               1, 0, 1, 1,               1, 1, 0, 1,               1, 1, 1, 0), nc = 4) gamma <- matrix(c(0,2,1,0,                   2,0,4,1,                   1,4,0,7,                   0,1,7,0), nc = 4) cost <- neg_likelihood_pen(gamma, weights, 100000) #> Error in neg_likelihood_pen(gamma, weights, 1e+05): unused argument (1e+05) merge_clusters(R, clusters, cost = cost) #> Error in merge_clusters(R, clusters, cost = cost): could not find function \"merge_clusters\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/nloglike_grad_np.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","title":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","text":"Gradient negative log likelihood without penalty","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/nloglike_grad_np.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","text":"","code":"nloglike_grad_np(gamma)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/nloglike_grad_np.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","text":"gamma d x d variogram matrix.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/nloglike_grad_np.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","text":"function R matrix clusters compute gradient matrix negative log likelihood fixed variogram gamma. gradient matrix can computed :   : - dlog = t(U) g(Theta_p) U - 0.5 diag(t(U) g(Theta_p) U) - dtrace = - t(U) gamma U  + 0.5 diag(t(U) gamma U)","code":"dnllh = dlog + dtrace"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/nloglike_grad_np.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gradient of the negative log likelihood without penalty — nloglike_grad_np","text":"","code":"R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1,3), c(2,4)) gamma <- matrix(c(0,2,1,0,                   2,0,4,1,                   1,4,0,7,                   0,1,7,0), nc = 4) gradient <- nloglike_grad_np(gamma) #> Error in nloglike_grad_np(gamma): could not find function \"nloglike_grad_np\" gradient(R, clusters) #> Error in gradient(R, clusters): could not find function \"gradient\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/penalty_grad.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the penalty's gradient — penalty_grad","title":"Computation of the penalty's gradient — penalty_grad","text":"Computation penalty's gradient","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/penalty_grad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the penalty's gradient — penalty_grad","text":"","code":"penalty_grad(weights)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/penalty_grad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the penalty's gradient — penalty_grad","text":"weights d x d symmetric matrix zero diagonal.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/penalty_grad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the penalty's gradient — penalty_grad","text":"function clusters corresponding R matrix. Compute gradient fixed weight. expression gradient just weighted sum gradient tilde D^2 weights clustered weights. See equations section 4.3.3 details.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/penalty_grad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of the penalty's gradient — penalty_grad","text":"","code":"R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1,3), c(2,4)) W <- matrix(c(0, 1, 1, 1,               1, 0, 1, 1,               1, 1, 0, 1,               1, 1, 1, 0), nc = 4) dpen <- penalty_grad(W) #> Error in penalty_grad(W): could not find function \"penalty_grad\" dpen(R, clusters) #> Error in dpen(R, clusters): could not find function \"dpen\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/psolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Moore-Penrose pseudo inverse — psolve","title":"Moore-Penrose pseudo inverse — psolve","text":"Moore-Penrose pseudo inverse","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/psolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moore-Penrose pseudo inverse — psolve","text":"","code":"psolve(A, tol = 1e-12)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/psolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moore-Penrose pseudo inverse — psolve","text":"d x d symmetric positive semi-definite matrix.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/psolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moore-Penrose pseudo inverse — psolve","text":"Computes Moore-Penrose inverse matrix. calculation done thanks article  : = L L^t       (e.g. Crout decomposition) (L zero-columns) : ^+ = L (L^t L)^-1 (L^t L)^-1 L^t","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/psolve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moore-Penrose pseudo inverse — psolve","text":"","code":"A <- matrix(c(1, 2, 3,               2, 5, 6,               3, 6, 9), nc = 3) psolve(A) #> Error in psolve(A): could not find function \"psolve\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/semi_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-definite checker — semi_def","title":"Semi-definite checker — semi_def","text":"Semi-definite checker","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/semi_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-definite checker — semi_def","text":"","code":"semi_def(M)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/semi_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-definite checker — semi_def","text":"M /eqnn/times n symmetric matrix.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/semi_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-definite checker — semi_def","text":"TRUE matrix semi-definite positive, FALSE otherwise. verification done checking sign eigen-values matrix.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/step_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Step for the gradient descent — step_gradient","title":"Step for the gradient descent — step_gradient","text":"Step gradient descent","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/step_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step for the gradient descent — step_gradient","text":"","code":"step_gradient(gamma, weights, size_grid = 100)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/step_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step for the gradient descent — step_gradient","text":"gamma d x d matrix : variogram matrix. weights d x d symmetric matrix zero diagonal. size_grid integer : size search grid optimal step. lambda positive number : weight penalty.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/step_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step for the gradient descent — step_gradient","text":"function clusters R matrix returns next step optimisation gradient descent algorithm.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/step_gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step for the gradient descent — step_gradient","text":"","code":"R <- matrix(c(0.5, -1,               -1, -1), nr = 2) clusters <- list(c(1, 3), c(2,4)) W <- matrix(c(0, 1, 1, 1,               1, 0, 1, 1,               1, 1, 0, 1,               1, 1, 1, 0), nc = 4) gamma <- matrix(c(0, 2, 1, 0,                   2, 0, 4, 1,                   1, 4, 0, 7,                   0, 1, 7, 0), nc = 4) f <- step_gradient(gamma, W, 0.5) #> Error in step_gradient(gamma, W, 0.5): could not find function \"step_gradient\" f(R, clusters, 1) #> Error in f(R, clusters, 1): could not find function \"f\""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/theta-r.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","title":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","text":"block matrix models defined two elements : cluster's partition \\(\\{C_1, \\dots, C_K\\}\\), included \\(V\\) \\(R\\) matrix belongs \\(\\mathcal S_K(\\mathbb R)\\), set symmetric \\(K \\times K\\) matrix. expression precision \\(\\Theta\\) statisfies block matrix model $$    \\Theta = U R U^t + $$ \\(U\\) cluster matrix \\(\\) diagonal matrix rows theta sum zero : \\( a_{ii} = - \\sum_l p_l r_{kl} \\) \\(\\) cluster \\(C_k\\).","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/theta-r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","text":"","code":"build_theta(R, clusters)  extract_R_matrix(Theta, clusters)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/theta-r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","text":"R build_theta(), \\(K \\times K\\) matrix clusters. clusters list indices associated partition \\(V\\). Theta extract_R_matrix(), \\(d \\times d\\) block matrix can factorizable.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/theta-r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","text":"extract_R_matrix(), matrix size number clusters (.e. \\(K\\)) corresponding reduced matrix \\(R\\) original matrix \\(\\Theta\\). build_theta(), matrix size number variables (.e. \\(d\\)) corresponding precision matrix \\(\\Theta\\) induced \\(R\\).","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/theta-r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to navigate between \\(R\\) and \\(\\Theta\\) for given clusters — theta-r","text":"","code":"############################################################## #                       FROM THETA TO R ############################################################## Theta <- matrix(  c(4.5, .5, .5, .5, -2, -2, -2,    .5, 4.5, .5, .5, -2, -2, -2,    .5, .5, 4.5, .5, -2, -2, -2,    .5, .5, .5, 4.5, -2, -2, -2,    -2, -2, -2, -2, 6, 1, 1,    -2, -2, -2, -2, 1, 6, 1,    -2, -2, -2, -2, 1, 1, 6),  nc = 7 )  clusters <- list(c(1,2,3,4), c(5,6,7))  extract_R_matrix(Theta, clusters) #>      [,1] [,2] #> [1,]  0.5   -2 #> [2,] -2.0    1  ############################################################## #                       FROM R TO THETA ##############################################################  R <- matrix(c(1, -3, 0,               -3, 2, -2,               0, -2, 1), nc = 3)  clusters <- list(1:4, 5:8, 9:12)  build_theta(R, clusters) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] #>  [1,]    9    1    1    1   -3   -3   -3   -3    0     0     0     0 #>  [2,]    1    9    1    1   -3   -3   -3   -3    0     0     0     0 #>  [3,]    1    1    9    1   -3   -3   -3   -3    0     0     0     0 #>  [4,]    1    1    1    9   -3   -3   -3   -3    0     0     0     0 #>  [5,]   -3   -3   -3   -3   14    2    2    2   -2    -2    -2    -2 #>  [6,]   -3   -3   -3   -3    2   14    2    2   -2    -2    -2    -2 #>  [7,]   -3   -3   -3   -3    2    2   14    2   -2    -2    -2    -2 #>  [8,]   -3   -3   -3   -3    2    2    2   14   -2    -2    -2    -2 #>  [9,]    0    0    0    0   -2   -2   -2   -2    5     1     1     1 #> [10,]    0    0    0    0   -2   -2   -2   -2    1     5     1     1 #> [11,]    0    0    0    0   -2   -2   -2   -2    1     1     5     1 #> [12,]    0    0    0    0   -2   -2   -2   -2    1     1     1     5"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/weight_clustered.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the clustered weight matrix — weight_clustered","title":"Computation of the clustered weight matrix — weight_clustered","text":"Computation clustered weight matrix","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/weight_clustered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the clustered weight matrix — weight_clustered","text":"","code":"weight_clustered(weights)"},{"path":"https://alxkpl.github.io/HRClusterpath/reference/weight_clustered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the clustered weight matrix — weight_clustered","text":"weights d x d symmetric matrix zero diagonal.","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/weight_clustered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the clustered weight matrix — weight_clustered","text":"function clusters : weight matrix pair clusters : W_kl = sum_(C_k) sum_(j C_l) w_ij","code":""},{"path":"https://alxkpl.github.io/HRClusterpath/reference/weight_clustered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of the clustered weight matrix — weight_clustered","text":"","code":"clusters <- list(c(1,2,3), c(4,5)) W <- matrix(1:25, nc = 5) W_c <- weight_clustered(W) #> Error in weight_clustered(W): could not find function \"weight_clustered\" W_c(clusters) #> Error in W_c(clusters): could not find function \"W_c\""}]
