% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood.R
\name{likelihood}
\alias{likelihood}
\alias{neg_likelihood}
\alias{penalty}
\alias{neg_likelihood_pen}
\title{Negative log-likelihood for Hüsler-Reiss graphical models}
\usage{
neg_likelihood(gamma)

penalty(weights)

neg_likelihood_pen(gamma, weights)
}
\arguments{
\item{gamma}{A \eqn{d \times d} matrix: the variogram matrix \eqn{\Gamma}.}

\item{weights}{The \eqn{d \times d} symmetric matrix \eqn{W} with a zero diagonal.}
}
\value{
For \code{neg_likelihood()}, it produces a function with two parameters :
\itemize{
\item \strong{R} the \eqn{K \times K} clusters matrix
\item \strong{clusters} a list of indices associated to a partition of \eqn{V}
and compute the value of the non penalised negative log-likelihood \eqn{L^{(n)}(\Theta)}.
}

For \code{penalty()}, it produces a function with two parameters :
\itemize{
\item \strong{R} the \eqn{K \times K} clusters matrix
\item \strong{clusters} a list of indices associated to a partition of \eqn{V}
and compute the value of the penalty \eqn{\mathcal P(\Theta)}.
}

For \code{neg_likelihood_pen()}, it produces a function with three parameters :
\itemize{
\item \strong{R} : the \eqn{K \times K} clusters matrix
\item \strong{clusters} : a list of indices associated to a partition of \eqn{V}
\item \strong{lambda} : a positive number, the weight of the penalty.
and compute the value of the penalised negative log-likelihood \eqn{L_{\mathcal P}^{(n)}(\Theta, \lambda)}.
}
}
\description{
The penalised negative loglikelihood of the Hüsler-Reiss graphical models can be
written as follow :
\deqn{
 L_{\mathcal P}^{(n)}(\Theta, \lambda) = \underbrace{-\log(|\Theta|_+) -
 \frac 12 \text{tr}(\hat \Gamma^{(n)}\Theta)}_{L^{(n)}(\Theta)} + \lambda
 \underbrace{\sum_{i<j} w_{ij} d^2_{ij}(\Theta)}_{\mathcal P(\Theta)}
}
where \eqn{|\cdot|_+} is the generalised determinant, \eqn{n} is the sample size,
\eqn{\hat \Gamma^{(n)}} an estimation of the variogram matrix \eqn{\Gamma} and \eqn{w_{ij}>0} the weights.
}
\details{
We use the block matrix structure to compute the likelihood here (see \code{\link{build_theta}()} and
\code{\link{extract_R_matrix}()}), that is why we use two parameters for the computation
instead of only one matrix \eqn{\Theta}.
}
\examples{
############################################################
#                      INITIALIZATION
############################################################
# Block matrix structure
R <- matrix(c(0.5, -1,
              -1, -1), nr = 2)
clusters <- list(c(1,3), c(2,4))

# Weight matrix
W <- matrix(c(0, 1, 1, 1,
              1, 0, 1, 1,
              1, 1, 0, 1,
              1, 1, 1, 0), nc = 4)

# Random variogram
gamma <- matrix(c(0, 2, 1, 0,
                  2, 0, 4, 1,
                  1, 4, 0, 7,
                  0, 1, 7, 0), nc = 4)

# Regularization parameter
lambda <- 2.5

############################################################
#                   NEGATIVE LOG-LIKEHOOD
############################################################
nllh <- neg_likelihood(gamma)
nllh(R, clusters)

############################################################
#                          PENALTY
############################################################
pen <- penalty(W)
pen(R, clusters)

############################################################
#             PENALISED NEGATIVE LOG-LIKELIHOOD
############################################################
nllh_pen <- neg_likelihood_pen(gamma, W)
nllh_pen(R, clusters, lambda)

}
